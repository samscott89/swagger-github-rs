/* 
 * GitHub
 *
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PullRequestLinks {
  #[serde(rename = "comments")]
  comments: Option<::models::IssuesCommentsInnerLinksHtml>,
  #[serde(rename = "html")]
  html: Option<::models::IssuesCommentsInnerLinksHtml>,
  #[serde(rename = "review_comments")]
  review_comments: Option<::models::IssuesCommentsInnerLinksHtml>,
  #[serde(rename = "self")]
  _self: Option<::models::IssuesCommentsInnerLinksHtml>
}

impl PullRequestLinks {
  pub fn new() -> PullRequestLinks {
    PullRequestLinks {
      comments: None,
      html: None,
      review_comments: None,
      _self: None
    }
  }

  pub fn set_comments(&mut self, comments: ::models::IssuesCommentsInnerLinksHtml) {
    self.comments = Some(comments);
  }

  pub fn with_comments(mut self, comments: ::models::IssuesCommentsInnerLinksHtml) -> PullRequestLinks {
    self.comments = Some(comments);
    self
  }

  pub fn comments(&self) -> Option<&::models::IssuesCommentsInnerLinksHtml> {
    self.comments.as_ref()
  }

  pub fn reset_comments(&mut self) {
    self.comments = None;
  }

  pub fn set_html(&mut self, html: ::models::IssuesCommentsInnerLinksHtml) {
    self.html = Some(html);
  }

  pub fn with_html(mut self, html: ::models::IssuesCommentsInnerLinksHtml) -> PullRequestLinks {
    self.html = Some(html);
    self
  }

  pub fn html(&self) -> Option<&::models::IssuesCommentsInnerLinksHtml> {
    self.html.as_ref()
  }

  pub fn reset_html(&mut self) {
    self.html = None;
  }

  pub fn set_review_comments(&mut self, review_comments: ::models::IssuesCommentsInnerLinksHtml) {
    self.review_comments = Some(review_comments);
  }

  pub fn with_review_comments(mut self, review_comments: ::models::IssuesCommentsInnerLinksHtml) -> PullRequestLinks {
    self.review_comments = Some(review_comments);
    self
  }

  pub fn review_comments(&self) -> Option<&::models::IssuesCommentsInnerLinksHtml> {
    self.review_comments.as_ref()
  }

  pub fn reset_review_comments(&mut self) {
    self.review_comments = None;
  }

  pub fn set__self(&mut self, _self: ::models::IssuesCommentsInnerLinksHtml) {
    self._self = Some(_self);
  }

  pub fn with__self(mut self, _self: ::models::IssuesCommentsInnerLinksHtml) -> PullRequestLinks {
    self._self = Some(_self);
    self
  }

  pub fn _self(&self) -> Option<&::models::IssuesCommentsInnerLinksHtml> {
    self._self.as_ref()
  }

  pub fn reset__self(&mut self) {
    self._self = None;
  }

}



