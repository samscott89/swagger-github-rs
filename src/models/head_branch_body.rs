/* 
 * GitHub
 *
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct HeadBranchBody {
  /// Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure youâ€™re not overwriting work.
  #[serde(rename = "force")]
  force: bool,
  /// String of the SHA1 value to set this reference to.
  #[serde(rename = "sha")]
  sha: String
}

impl HeadBranchBody {
  pub fn new(force: bool, sha: String) -> HeadBranchBody {
    HeadBranchBody {
      force: force,
      sha: sha
    }
  }

  pub fn set_force(&mut self, force: bool) {
    self.force = force;
  }

  pub fn with_force(mut self, force: bool) -> HeadBranchBody {
    self.force = force;
    self
  }

  pub fn force(&self) -> &bool {
    &self.force
  }


  pub fn set_sha(&mut self, sha: String) {
    self.sha = sha;
  }

  pub fn with_sha(mut self, sha: String) -> HeadBranchBody {
    self.sha = sha;
    self
  }

  pub fn sha(&self) -> &String {
    &self.sha
  }


}



