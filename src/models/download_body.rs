/* 
 * GitHub
 *
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DownloadBody {
  #[serde(rename = "content_type")]
  content_type: Option<String>,
  #[serde(rename = "description")]
  description: Option<String>,
  #[serde(rename = "name")]
  name: String,
  /// Size of file in bytes.
  #[serde(rename = "size")]
  size: i32
}

impl DownloadBody {
  pub fn new(name: String, size: i32) -> DownloadBody {
    DownloadBody {
      content_type: None,
      description: None,
      name: name,
      size: size
    }
  }

  pub fn set_content_type(&mut self, content_type: String) {
    self.content_type = Some(content_type);
  }

  pub fn with_content_type(mut self, content_type: String) -> DownloadBody {
    self.content_type = Some(content_type);
    self
  }

  pub fn content_type(&self) -> Option<&String> {
    self.content_type.as_ref()
  }

  pub fn reset_content_type(&mut self) {
    self.content_type = None;
  }

  pub fn set_description(&mut self, description: String) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: String) -> DownloadBody {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&String> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> DownloadBody {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_size(&mut self, size: i32) {
    self.size = size;
  }

  pub fn with_size(mut self, size: i32) -> DownloadBody {
    self.size = size;
    self
  }

  pub fn size(&self) -> &i32 {
    &self.size
  }


}



