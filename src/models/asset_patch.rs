/* 
 * GitHub
 *
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AssetPatch {
  #[serde(rename = "label")]
  label: Option<String>,
  #[serde(rename = "name")]
  name: String
}

impl AssetPatch {
  pub fn new(name: String) -> AssetPatch {
    AssetPatch {
      label: None,
      name: name
    }
  }

  pub fn set_label(&mut self, label: String) {
    self.label = Some(label);
  }

  pub fn with_label(mut self, label: String) -> AssetPatch {
    self.label = Some(label);
    self
  }

  pub fn label(&self) -> Option<&String> {
    self.label.as_ref()
  }

  pub fn reset_label(&mut self) {
    self.label = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> AssetPatch {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


}



