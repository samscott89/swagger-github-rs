/* 
 * GitHub
 *
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct FeedsLinksCurrentUser {
  #[serde(rename = "href")]
  href: Option<String>,
  #[serde(rename = "type")]
  _type: Option<String>
}

impl FeedsLinksCurrentUser {
  pub fn new() -> FeedsLinksCurrentUser {
    FeedsLinksCurrentUser {
      href: None,
      _type: None
    }
  }

  pub fn set_href(&mut self, href: String) {
    self.href = Some(href);
  }

  pub fn with_href(mut self, href: String) -> FeedsLinksCurrentUser {
    self.href = Some(href);
    self
  }

  pub fn href(&self) -> Option<&String> {
    self.href.as_ref()
  }

  pub fn reset_href(&mut self) {
    self.href = None;
  }

  pub fn set__type(&mut self, _type: String) {
    self._type = Some(_type);
  }

  pub fn with__type(mut self, _type: String) -> FeedsLinksCurrentUser {
    self._type = Some(_type);
    self
  }

  pub fn _type(&self) -> Option<&String> {
    self._type.as_ref()
  }

  pub fn reset__type(&mut self) {
    self._type = None;
  }

}



