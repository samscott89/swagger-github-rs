/* 
 * GitHub
 *
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SubscribitionBody {
  #[serde(rename = "ignored")]
  ignored: Option<bool>,
  #[serde(rename = "subscribed")]
  subscribed: Option<bool>
}

impl SubscribitionBody {
  pub fn new() -> SubscribitionBody {
    SubscribitionBody {
      ignored: None,
      subscribed: None
    }
  }

  pub fn set_ignored(&mut self, ignored: bool) {
    self.ignored = Some(ignored);
  }

  pub fn with_ignored(mut self, ignored: bool) -> SubscribitionBody {
    self.ignored = Some(ignored);
    self
  }

  pub fn ignored(&self) -> Option<&bool> {
    self.ignored.as_ref()
  }

  pub fn reset_ignored(&mut self) {
    self.ignored = None;
  }

  pub fn set_subscribed(&mut self, subscribed: bool) {
    self.subscribed = Some(subscribed);
  }

  pub fn with_subscribed(mut self, subscribed: bool) -> SubscribitionBody {
    self.subscribed = Some(subscribed);
    self
  }

  pub fn subscribed(&self) -> Option<&bool> {
    self.subscribed.as_ref()
  }

  pub fn reset_subscribed(&mut self) {
    self.subscribed = None;
  }

}



