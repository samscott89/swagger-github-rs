/* 
 * GitHub
 *
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DeleteFile {
  #[serde(rename = "commit")]
  commit: Option<::models::DeleteFileCommit>,
  #[serde(rename = "content")]
  content: Option<String>
}

impl DeleteFile {
  pub fn new() -> DeleteFile {
    DeleteFile {
      commit: None,
      content: None
    }
  }

  pub fn set_commit(&mut self, commit: ::models::DeleteFileCommit) {
    self.commit = Some(commit);
  }

  pub fn with_commit(mut self, commit: ::models::DeleteFileCommit) -> DeleteFile {
    self.commit = Some(commit);
    self
  }

  pub fn commit(&self) -> Option<&::models::DeleteFileCommit> {
    self.commit.as_ref()
  }

  pub fn reset_commit(&mut self) {
    self.commit = None;
  }

  pub fn set_content(&mut self, content: String) {
    self.content = Some(content);
  }

  pub fn with_content(mut self, content: String) -> DeleteFile {
    self.content = Some(content);
    self
  }

  pub fn content(&self) -> Option<&String> {
    self.content.as_ref()
  }

  pub fn reset_content(&mut self) {
    self.content = None;
  }

}



