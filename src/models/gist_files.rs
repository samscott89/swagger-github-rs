/* 
 * GitHub
 *
 * Powerful collaboration, code review, and code management for open source and private projects. 
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GistFiles {
  #[serde(rename = "ring.erl")]
  ring_erl: Option<::models::GistFilesRingErl>
}

impl GistFiles {
  pub fn new() -> GistFiles {
    GistFiles {
      ring_erl: None
    }
  }

  pub fn set_ring_erl(&mut self, ring_erl: ::models::GistFilesRingErl) {
    self.ring_erl = Some(ring_erl);
  }

  pub fn with_ring_erl(mut self, ring_erl: ::models::GistFilesRingErl) -> GistFiles {
    self.ring_erl = Some(ring_erl);
    self
  }

  pub fn ring_erl(&self) -> Option<&::models::GistFilesRingErl> {
    self.ring_erl.as_ref()
  }

  pub fn reset_ring_erl(&mut self) {
    self.ring_erl = None;
  }

}



